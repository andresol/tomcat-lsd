#********************************************************************
# Wrapper Properties
#********************************************************************
# Java Application
wrapper.java.command=%JAVA_HOME%/bin/java
wrapper.pidfile=%CATALINA_INSTANCE%.pid

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperStartStopApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=%WRAPPER_HOME%/lib/wrapper.jar
wrapper.java.classpath.2=%JAVA_HOME%/tools.jar
wrapper.java.classpath.3=%CATALINA_HOME%/bin/bootstrap.jar
wrapper.java.classpath.4=%CATALINA_HOME%/bin/tomcat-juli.jar
wrapper.java.classpath.5=%CATALINA_SHARED%/lib/*.jar


# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=%WRAPPER_HOME%/lib

# Java Additional Parameters
wrapper.java.additional.1=-server
wrapper.java.additional.2=-Djava.endorsed.dirs=%CATALINA_SHARED%/endorsed:%CATALINA_HOME%/endorsed
wrapper.java.additional.3=-Djava.io.tmpdir=%INSTALL_DIR%/tomcat_shared/temp
wrapper.java.additional.4=-Djava.awt.headless=true

# Java debugger agent
wrapper.java.additional.5=-Xdebug
wrapper.java.additional.6=-Xnoagent
wrapper.java.additional.7=-Xrunjdwp:transport=dt_socket,server=y,address=%JAVA_DEBUG_PORT%,suspend=n

# We choose to force the language to english us for the vm for a better behavior with standard projects
wrapper.java.additional.8=-Duser.country=US
wrapper.java.additional.9=-Duser.language=en
wrapper.java.additional.10=-Dfile.encoding=utf-8

# Tomcat args
wrapper.java.additional.11=-Dcatalina.base=%CATALINA_BASE%
wrapper.java.additional.12=-Dcatalina.home=%CATALINA_HOME%
wrapper.java.additional.13=-Dcatalina.shared=%CATALINA_SHARED%
wrapper.java.additional.14=-Dcatalina.config=%CATALINA_BASE%/conf/catalina.properties
wrapper.java.additional.15=-Dcatalina.instance=%CATALINA_INSTANCE%
wrapper.java.additional.16=-Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager
wrapper.java.additional.17=-Djava.util.logging.config.file=%INSTALL_DIR%/tomcat_shared/conf/logging.properties
wrapper.java.additional.18=-Dhttp.port=%TOMCAT_HTTP_PORT%
wrapper.java.additional.19=-Dajp.port=%TOMCAT_AJP_PORT%
wrapper.java.additional.20=-Dajp.jvmroute=%TOMCAT_AJP_JVMROUTE%
wrapper.java.additional.21=-Dssl.port=%TOMCAT_SSL_PORT%
wrapper.java.additional.22=-Dshutdown.port=%TOMCAT_SHUTDOWN_PORT%
wrapper.java.additional.23=-Dorg.apache.jasper.compiler.Parser.STRICT_QUOTE_ESCAPING=false

# Tomcat LSD addons webapp args
wrapper.java.additional.24=-Dhostname.alias=%HOSTNAME_ALIAS%

# JSW additional args
wrapper.java.additional.25=-Dwrapper.dump.port=%WRAPPER_DUMP_PORT%

# Remove jmx export from C3P0
wrapper.java.additional.26=-Dcom.mchange.v2.c3p0.management.ManagementCoordinator=com.mchange.v2.c3p0.management.NullManagementCoordinator

# JMX Management
wrapper.java.additional.27=-Dcom.sun.management.jmxremote
wrapper.java.additional.28=-Dcom.sun.management.jmxremote.port=%JAVA_JMX_PORT%
wrapper.java.additional.29=-Dcom.sun.management.jmxremote.authenticate=false
wrapper.java.additional.30=-Dcom.sun.management.jmxremote.ssl=false

# Java RMI tuning
wrapper.java.additional.31=-Dsun.rmi.dgc.server.gcInterval=600000
wrapper.java.additional.32=-Dsun.rmi.dgc.client.gcInterval=600000
wrapper.java.additional.33=-Dsun.rmi.transport.tcp.connectionPool=true

# Java behavior on error
wrapper.java.additional.34=-XX:+HeapDumpOnOutOfMemoryError
wrapper.java.additional.35=-XX:OnError=%CATALINA_SHARED%/bin/sendmail.sh
wrapper.java.additional.36=-XX:OnOutOfMemoryError=%CATALINA_SHARED%/bin/sendmail.sh

# GC tuning from Spring Source
wrapper.java.additional.37=-XX:+CMSClassUnloadingEnabled
wrapper.java.additional.38=-XX:+UseConcMarkSweepGC
wrapper.java.additional.39=-XX:+CMSIncrementalMode
wrapper.java.additional.40=-XX:+CMSIncrementalPacing
wrapper.java.additional.41=-XX:CMSIncrementalDutyCycleMin=0
wrapper.java.additional.42=-XX:CMSIncrementalDutyCycle=10
wrapper.java.additional.43=-XX:+UseParNewGC
wrapper.java.additional.44=-XX:MaxGCPauseMillis=250
wrapper.java.additional.45=-XX:MaxGCMinorPauseMillis=100
wrapper.java.additional.46=-XX:MaxPermSize=%JVM_MAX_PERM_SIZE%m


# Initial Java Heap Size (in MB)
wrapper.java.initmemory=%JVM_INIT_MEMORY%

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=%JVM_MAX_MEMORY%

# Application parameters.  Add parameters as needed starting from 1
# The first application parameter is the name of the class whose main
# method is to be called when the application is launched.  The class
# name is followed by the number of parameters to be passed to its main
# method.  Then comes the actual parameters.
wrapper.app.parameter.1=org.apache.catalina.startup.Bootstrap
wrapper.app.parameter.2=3
wrapper.app.parameter.3=-config
wrapper.app.parameter.4=%CATALINA_SHARED%/conf/server.xml
wrapper.app.parameter.5=start


# The start parameters are followed by the name of the class whose main
# method is to be called to stop the application.  The stop class name
# is followed by a flag which controls whether or not the Wrapper should
# wait for all non daemon threads to complete before exiting the JVM.
# The flag is followed by the number of parameters to be passed to the
# stop class's main method.  Finally comes the actual parameters.
wrapper.app.parameter.6=org.apache.catalina.startup.Bootstrap
wrapper.app.parameter.7=TRUE
wrapper.app.parameter.8=3
wrapper.app.parameter.9=-config
wrapper.app.parameter.10=%CATALINA_SHARED%/conf/server.xml
wrapper.app.parameter.11=stop

wrapper.request_thread_dump_on_failed_jvm_exit=TRUE

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM
#pris en compte sur le serveur des modif de conf
wrapper.restart.reload_configuration=TRUE
# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=ERROR

# Log file to use for wrapper output logging.
wrapper.logfile=%INSTALL_DIR%/logs/%CATALINA_INSTANCE%.wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=10m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=30

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=FATAL
wrapper.syslog.ident=%CATALINA_INSTANCE%
#********************************************************************
# Wrapper Windows Properties
#********************************************************************
# Title to use when running as a console
wrapper.console.title=%CATALINA_INSTANCE%

# Set it as a daemon
#wrapper.daemonize=TRUE

# Timeouts setup
wrapper.ping.timeout=600
wrapper.ping.interval=300
#wrapper.cpu.timeout=300

# Decision on OutOfMemoryError
wrapper.filter.trigger.1=java.lang.OutOfMemoryError
wrapper.filter.action.1=RESTART

# Cascading wrapper configuration files to override entries with instance specific values
#include %CATALINA_BASE%/conf/wrapper.conf
